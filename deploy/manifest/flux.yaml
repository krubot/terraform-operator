---
apiVersion: v1
kind: Namespace
metadata:
  name: flux

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: helmreleases.flux.weave.works
spec:
  group: flux.weave.works
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
    - hr
  scope: Namespaced
  subresources:
    status: {}
  version: v1beta1
  versions:
    - name: v1beta1
      served: true
      storage: true
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required: ['chart']
          properties:
            releaseName:
              type: string
              pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            timeout:
              type: integer
              format: int64
            resetValues:
              type: boolean
            forceUpgrade:
              type: boolean
            rollback:
              type: object
              properties:
                enable:
                  type: boolean
                force:
                  type: boolean
                recreate:
                  type: boolean
                disableHooks:
                  type: boolean
                timeout:
                  type: integer
                  format: int64
                wait:
                  type: boolean
            valueFileSecrets:
              type: array
              items:
                type: object
                required: ['name']
                properties:
                  name:
                    type: string
            valuesFrom:
              type: array
              items:
                type: object
                properties:
                  configMapKeyRef:
                    type: object
                    required: ['name']
                    properties:
                      name:
                        type: string
                      key:
                        type: string
                      optional:
                        type: boolean
                  secretKeyRef:
                    type: object
                    required: ['name']
                    properties:
                      name:
                        type: string
                      key:
                        type: string
                      optional:
                        type: boolean
                  externalSourceRef:
                    type: object
                    required: ['url']
                    properties:
                      url:
                        type: string
                      optional:
                        type: boolean
                  chartFileRef:
                    type: object
                    required: ['path']
                    properties:
                      path:
                        type: string
                      optional:
                        type: boolean
                oneOf:
                - required: ['configMapKeyRef']
                - required: ['secretKeyRef']
                - required: ['externalSourceRef']
                - required: ['chartFileRef']
            values:
              type: object
            chart:
              oneOf:
              - required: ['git', 'path']
                properties:
                  git:
                    type: string
                    format: git # not defined by OAS
                  path:
                    type: string
                  ref:
                    type: string
                  skipDepUpdate:
                    type: boolean
              - required: ['repository', 'name', 'version']
                properties:
                  repository:
                    type: string
                    format: url # not defined by OAS
                  name:
                    type: string
                  version:
                    type: string
                    format: semver # not defined by OAS
                  chartPullSecret:
                    properties:
                      name:
                        type: string

---
# The service account, cluster roles, and cluster role binding are
# only needed for Kubernetes with role-based access control (RBAC).
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: flux
  name: flux
  namespace: flux

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    name: flux
  name: flux
rules:
  - apiGroups: ['*']
    resources: ['*']
    verbs: ['*']
  - nonResourceURLs: ['*']
    verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    name: flux
  name: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux
subjects:
  - kind: ServiceAccount
    name: flux
    namespace: flux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux
  namespace: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      name: flux
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "3031" # tell prometheus to scrape /metrics endpoint's port.
      labels:
        name: flux
    spec:
      serviceAccountName: flux
      volumes:
      - name: git-key
        secret:
          secretName: flux-git-deploy
          defaultMode: 0400 # when mounted read-only, we won't be able to chmod

      # This is a tmpfs used for generating SSH keys. In K8s >= 1.10,
      # mounted secrets are read-only, so we need a separate volume we
      # can write to.
      - name: git-keygen
        emptyDir:
          medium: Memory

      # The following volume is for using a customised known_hosts
      # file, which you will need to do if you host your own git
      # repo rather than using github or the like. You'll also need to
      # mount it into the container, below. See
      # https://docs.fluxcd.io/en/latest/guides/use-private-git-host.html
      # - name: ssh-config
      #   configMap:
      #     name: flux-ssh-config

      # The following volume is for using a customised .kube/config,
      # which you will need to do if you wish to have a different
      # default namespace. You will also need to provide the configmap
      # with an entry for `config`, and uncomment the volumeMount and
      # env entries below.
      # - name: kubeconfig
      #   configMap:
      #     name: flux-kubeconfig

      # The following volume is used to import GPG keys (for signing
      # and verification purposes). You will also need to provide the
      # secret with the keys, and uncomment the volumeMount and args
      # below.
      # - name: gpg-keys
      #   secret:
      #     secretName: flux-gpg-keys
      #     defaultMode: 0400

      containers:
      - name: flux
        # There are no ":latest" images for flux. Find the most recent
        # release or image version at https://hub.docker.com/r/fluxcd/flux/tags
        # and replace the tag here.
        image: docker.io/fluxcd/flux:1.15.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        ports:
        - containerPort: 3030 # informational
        livenessProbe:
          httpGet:
            port: 3030
            path: /api/flux/v6/identity.pub
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            port: 3030
            path: /api/flux/v6/identity.pub
          initialDelaySeconds: 5
          timeoutSeconds: 5
        volumeMounts:
        - name: git-key
          mountPath: /etc/fluxd/ssh # to match location given in image's /etc/ssh/config
          readOnly: true # this will be the case perforce in K8s >=1.10
        - name: git-keygen
          mountPath: /var/fluxd/keygen # to match location given in image's /etc/ssh/config

        # Include this if you need to mount a customised known_hosts
        # file; you'll also need the volume declared above.
        # - name: ssh-config
        #   mountPath: /root/.ssh

        # Include this and the volume "kubeconfig" above, and the
        # environment entry "KUBECONFIG" below, to override the config
        # used by kubectl.
        # - name: kubeconfig
        #   mountPath: /etc/fluxd/kube

        # Include this to point kubectl at a different config; you
        # will need to do this if you have mounted an alternate config
        # from a configmap, as in commented blocks above.
        # env:
        # - name: KUBECONFIG
        #   value: /etc/fluxd/kube/config

        # Include this and the volume "gpg-keys" above, and the
        # args below.
        # - name: gpg-keys
        #   mountPath: /root/gpg-import
        #   readOnly: true

        # Include this if you want to supply HTTP basic auth credentials for git
        # via the `GIT_AUTHUSER` and `GIT_AUTHKEY` environment variables using a
        # secret.
        # envFrom:
        # - secretRef:
        #     name: flux-git-auth

        args:

        # If you deployed memcached in a different namespace to flux,
        # or with a different service name, you can supply these
        # following two arguments to tell fluxd how to connect to it.
        # - --memcached-hostname=memcached.default.svc.cluster.local

        # Use the memcached ClusterIP service name by setting the
        # memcached-service to string empty
        - --memcached-service=

        # This must be supplied, and be in the tmpfs (emptyDir)
        # mounted above, for K8s >= 1.10
        - --ssh-keygen-dir=/var/fluxd/keygen

        # Replace the following URL to change the Git repository used by Flux.
        # HTTP basic auth credentials can be supplied using environment variables:
        # https://$(GIT_AUTHUSER):$(GIT_AUTHKEY)@github.com/user/repository.git
        - --git-url=git@github.com:krubot/terraform-operator
        - --git-branch=master

        # Include these two to enable git commit signing
        # - --git-gpg-key-import=/root/gpg-import
        # - --git-signing-key=<key id>

        # Include this to enable git signature verification
        # - --git-verify-signatures

        # Tell flux it has readonly access to the repo (default `false`)
        - --git-readonly

        # Instruct flux where to put sync bookkeeping (default "git", meaning use a tag in the upstream git repo)
        # - --sync-state=git

        # Include these next two to connect to an "upstream" service
        # (e.g., Weave Cloud). The token is particular to the service.
        # - --connect=wss://cloud.weave.works/api/flux
        # - --token=abc123abc123abc123abc123

        # Serve /metrics endpoint at different port;
        # make sure to set prometheus' annotation to scrape the port value.
        - --listen-metrics=:3031

      # Optional DNS settings, configuring the ndots option may resolve
      # nslookup issues on some Kubernetes setups.
      # dnsPolicy: "None"
      # dnsConfig:
      #   options:
      #     - name: ndots
      #       value: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: flux-helm-operator
  name: flux-helm-operator
  namespace: flux
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flux-helm-operator
      release: flux
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: flux-helm-operator
        release: flux
    spec:
      containers:
      - args:
        - --log-format=fmt
        - --git-timeout=20s
        - --git-poll-interval=5m
        - --charts-sync-interval=3m
        - --update-chart-deps=true
        - --log-release-diffs=false
        - --tiller-namespace=kube-system
        image: docker.io/fluxcd/helm-operator:1.0.0-rc3
        imagePullPolicy: IfNotPresent
        name: flux-helm-operator
        ports:
        - containerPort: 3030
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/fluxd/ssh
          name: git-key
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: flux
      serviceAccountName: flux
      terminationGracePeriodSeconds: 30
      volumes:
      - name: git-key
        secret:
          defaultMode: 256
          secretName: flux-git-deploy

---
apiVersion: v1
kind: Secret
metadata:
  name: flux-git-deploy
  namespace: flux
data:
  identity: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFRRUFuOVJSNmRjS3J3OGtTLzgza3FoT0FFdytlVW43Q3prdGRZN1orc1FJTjBqRXBiTDg1ZCtoCnRhMjZLZzl0ckY0RjNpYjdIZnI4Y01EZnBteEJFeGdjYXVuRm9WeCtablk0eXVtVS9lRytrV2o2ZHF1TTE4YTJHWit4Q08Kb1dDL2pGWGJhcjA2N2YrRWZMcmUzNml5SisxeE9PelJOR1draWtqS29BWlFkc2NmOHFwQmZJaTRhWUJweFVIczRteEMxVgpscHE2QkRsSEZuUjBhbDlpQk9PYWhJcGEvYkNzOXduam5XbjdERngyOU5MTk4vdnB3WkJKQloyamlQQWNjZ01CVnlEU3I0Ck5SaUpmd2tPYW5JbXhTSnZmRWZTOTFsOXN6a2M0cUt1RmNMcEhCSzc4cEw2dW9laXF3Y3Z4aExDWUFHYVdCWGYyU005OCsKL2lvMEZON2Vyd0FBQTlENE9BQlorRGdBV1FBQUFBZHpjMmd0Y25OaEFBQUJBUUNmMUZIcDF3cXZEeVJML3plU3FFNEFURAo1NVNmc0xPUzExanRuNnhBZzNTTVNsc3Z6bDM2RzFyYm9xRDIyc1hnWGVKdnNkK3Z4d3dOK21iRUVUR0J4cTZjV2hYSDVtCmRqaks2WlQ5NGI2UmFQcDJxNHpYeHJZWm43RUk2aFlMK01WZHRxdlRydC80Ujh1dDdmcUxJbjdYRTQ3TkUwWmFTS1NNcWcKQmxCMnh4L3lxa0Y4aUxocGdHbkZRZXppYkVMVldXbXJvRU9VY1dkSFJxWDJJRTQ1cUVpbHI5c0t6M0NlT2RhZnNNWEhiMAowczAzKytuQmtFa0ZuYU9JOEJ4eUF3RlhJTkt2ZzFHSWwvQ1E1cWNpYkZJbTk4UjlMM1dYMnpPUnppb3E0Vnd1a2NFcnZ5Cmt2cTZoNktyQnkvR0VzSmdBWnBZRmQvWkl6M3o3K0tqUVUzdDZ2QUFBQUF3RUFBUUFBQVFBM2NxRTRUcklXS1ZxZVF0dzAKdE03YXE1akEyem1NbXpsNkh5VGdLa0h2YS85TXZOdWZwQVdsMGE5VUNDWTBOaW95OTdNR281d1FRZGxWRXhsQVZvMEZTagpTVjFsRERteC80eFRBN0k2WEpMSEkzMlN2emI2eWRGeG1EempIMzFVWWpUTXd2ayt0L1p1anlYaTBkTjhwcE13L0hkWGhpCnVmRGNHOTRuTG53Z3o2aXhFaWwrQzJkb2N5NkJGY0pCVnBWMjVlTlRqak1BZzY3K0RyRXBBWEFvMmh3UGh6YXQrZTkzTFIKekZkQUxjZlE1bzFOZkJReDMvUDBGWU0zVEhoc2xMOGpCSC9yNGdya1R0R2FqR1UwcFQrRm1rRFJvYkhxczJpeW9taVVHZQpkVm8zU3hIYkw0dVVKV2tFOGZkbmwzTW52KzZIVmY4N3VBeTRPaFJ2dmhRQkFBQUFnUUMvSlFHM01uNUQ4b2tWZWVYdmkwClcvSS8rbHUyNS9rK3ltT0RMbER3eU4vZkhsUDBkZEF0OEpLRy9BbkhvaU9FT3ZmMFU5Qy9QNnloV1JnNnNlZ01BYmlpZy8KSHBodEtBWFVnWEdXYnM5MWZjUS9Mc2hpUVErRmlVTXpSbnkvVy9LeGpTOHl2a1N0QmFrSjBWdThqSG1iSEJFWTNMa2M3aApOV24rRmlaSmcycWdBQUFJRUEweGpkYzhDaDNkcnhpUXIrSVhsY2JPT3BZR21Dd3ZIM0lEeWlYY3l0enE3R1p4TkpQOVNlCjFqdzdsdmQ4dklvelVFUVRmVzdiOU1uNFJZd09Cc3YrMWpISDViSGNvMlRta3lhMHUyRVNUZVhXVUtQUW10V2ZDUDdTTmoKdkVUUmRjMFhRaHdhWGhrM1RqYzZ0MUJacTQ4NTB6NGh6VUt0SzcvNEhkbk9qUFpJOEFBQUNCQU1IVHRVSU4yeDRjOUpRVgpCcEhweXhGREhuUXBNci9KeStIQ3dLRGVHbjFhRUVoNjJlOVQ5QzNMZ3RiUHI0aUNDMGN6U1NqZ1hTUjNJTVE3VjhKNU5TCmxRUm1tTEZXZ1EwVEJ0b2tWNCtVUWdyRExhamtHSTJOUm14a0pJUUhVbXpUL3NoVmRBL2JYYmVLRzZ5MUV4RGxpeld6WlMKbGZhVlRQTHFxRk92QVRQaEFBQUFHbkp2YjNSQVpteDFlQzAzWXpWbVptTTRPV1kyTFhKM2FIcGoKLS0tLS1FTkQgT1BFTlNTSCBQUklWQVRFIEtFWS0tLS0tCg==
type: Opaque
---
# memcached deployment used by Flux to cache
# container image metadata.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  namespace: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      name: memcached
  template:
    metadata:
      labels:
        name: memcached
    spec:
      containers:
      - name: memcached
        image: memcached:1.5.15
        imagePullPolicy: IfNotPresent
        args:
        - -m 512   # Maximum memory to use, in megabytes
        - -I 5m    # Maximum size for one item
        - -p 11211 # Default port
        # - -vv    # Uncomment to get logs of each request and response.
        ports:
        - name: clients
          containerPort: 11211
        securityContext:
          runAsUser: 11211
          runAsGroup: 11211
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: memcached
  namespace: flux
spec:
  ports:
    - name: memcached
      port: 11211
  selector:
    name: memcached
